#=========================================================================
# Travis CI Configuration
#=========================================================================
# This file configures Travis CI to automatically run tests for this RTL
# project everytime a commit is made.

language: cpp

# Prefer use of container-based environment as they start up faster and
# provide more RAM and CPU cores.
sudo: false

# No Git operations will be performed. Best to fetch only the latest commit.
git:
  depth: 1

# TODO: Verify that this setting is optimal.
env:
  - JOBS=4

# Don't need email notifications for now.
notifications:
  email: false

cache:
  directories:
  - $HOME/systemc-2.3.1
  - $HOME/scv-2.0.0
  - $HOME/verilator

# Install the build requirements
addons:
  apt:
    sources:
     # For gcc-4.8
     - ubuntu-toolchain-r-test
    packages:
     # Dependencies from tutorial
     - autoconf
     - automake
     - autotools-dev
     - curl
     - libmpc-dev
     - libmpfr-dev
     - libgmp-dev
     - gawk
     - build-essential
     - bison
     - flex
     - texinfo
     - gperf
     - libncurses5-dev
     - libusb-1.0-0
     - libboost-dev
     # Need gcc-4.8
     - gcc-4.8
     - g++-4.8

install:
 # Download, build and install SystemC 2.3.1.
 - bash install-systemc.sh
 - export SYSTEMC_HOME=${HOME}/systemc-2.3.1
 - export SYSTEMC_INCLUDE=${SYSTEMC_HOME}/include
 - export SYSTEMC_LIBDIR=${SYSTEMC_HOME}/lib-linux64
 - ls -R ${SYSTEMC_HOME}
 # Download, build and install SCV 2.0.0.
 - bash install-scv.sh
 - export SCV_HOME=${HOME}/scv-2.0.0
 - export SCV_INCLUDE=${SCV_HOME}/include
 - export SCV_LIBDIR=${SCV_HOME}/lib-linux64
 - ls -R ${SCV_HOME}
 # Export installed libraries.
 - export LD_LIBRARY_PATH=".:${SYSTEMC_LIBDIR}:${SCV_LIBDIR}"
 # Download, build and install Verilator 3.882.
 - export SYSTEMC_CXX_FLAGS=-pthread
 - bash install-verilator.sh
 - export VERILATOR_ROOT=${HOME}/verilator/share/verilator
 - export PATH=${HOME}/verilator/bin:$PATH
 - verilator -V
 - ls -R ${VERILATOR_ROOT}

before_script:
 # Download resources required to run verification.
 # - make setup

script:
 # Build the RTL and SystemC tests.
 - make build
 # Run the simulation.
 - make run

after_success:
  # Collect coverage data.
  - make coverage
  - ls -al *
  - tar -zcvf payload.tar.gz dump.vcd coverage.dat
  - curl --upload-file ./payload.tar.gz https://transfer.sh
  - make clean
